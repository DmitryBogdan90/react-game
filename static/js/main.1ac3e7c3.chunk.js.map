{"version":3,"sources":["components/Header/index.js","components/Header/Header.jsx","assets/paper.svg","assets/scissors.svg","assets/rock.svg","components/Main/index.js","components/Main/Main.jsx","assets/rs_school_js.svg","components/Footer/Footer.jsx","components/Footer/index.js","components/Background/Background.jsx","components/Background/index.js","assets/modal.ogg","assets/theme.ogg","assets/win.ogg","assets/draw.ogg","assets/lose.ogg","components/Highscore/index.js","components/Highscore/Highscore.jsx","components/Settings/index.js","components/Settings/Settings.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["Header","changeBackgroundOn","newGame","saveGame","viewHighScore","viewSettings","deathCount","newGameCount","hardResetCount","className","Button","onClick","Main","browserChoice","playerChoice","winner","score","round","choices","handleClick","isScoreMode","playerAccumulator","browserAccumulator","drawAccumulator","resetDrawAccumulator","resetPlayerAccumulator","isFirstRound","restoredHealth","absorbedDamage","absorbBrowserScore","useState","isBurger","setBurger","anchorEl","setAnchorEl","burgerClose","getImage","choice","title","points","src","paperSvg","rockSvg","scissorsSvg","alt","map","index","aria-controls","aria-haspopup","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","color","MenuItem","size","GithubLink","Link","href","fontSize","Year","LogoFooter","CourseLogo","height","Footer","Star","width","this","x","Math","random","y","z","radius","speed","Background","props","state","counter","canvas","centerX","centerY","stars","tick","bind","animationID","paint","setState","generateStars","window","requestAnimationFrame","prevProps","prevState","snapshot","cancelAnimationFrame","i","isBackgroundOn","starsNext","context","refs","getContext","fillStyle","fillRect","length","beginPath","arc","fill","setTimeout","ref","Component","Highscore","highScore","Settings","isMusicOn","playTheme","isLizardMode","changeLizardMode","changeScoreMode","hardReset","disabled","App","isSettingsOn","isHighScoreOn","isDead","iterationAccumulator","killsCount","closeHighScore","closeSettings","playAudioEffect","stopTheme","Mousetrap","key","localStorage","getItem","save","JSON","parse","browserHealth","console","log","killHuman","audioModal","Audio","AudioModal","audioTheme","AudioTheme","unbind","setItem","stringify","floor","rock","scissors","paper","getWinner","AudioWin","AudioDraw","AudioLose","sortHighScore","splice","Date","now","sort","a","b","audioSource","audioEffect","play","pause","isThemePlay","Fade","in","Paper","elevation","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ac3e7c3.chunk.js","sourcesContent":["import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nimport './Header.scss';\n\nconst Header = ({\n  changeBackgroundOn,\n  newGame,\n  saveGame,\n  viewHighScore,\n  viewSettings,\n  deathCount,\n  newGameCount,\n  hardResetCount,\n}) => {\n  return (\n    <header>\n      <menu className=\"buttons-header\">\n        <Button className=\"header-button\" onClick={() => changeBackgroundOn()}>\n          Background\n        </Button>\n        <Button className=\"header-button\" onClick={() => newGame()}>\n          New Game\n        </Button>\n        <Button className=\"header-button\" onClick={() => saveGame()}>\n          Save Game\n        </Button>\n        <Button className=\"header-button\" onClick={() => viewHighScore()}>\n          High-score\n        </Button>\n        <Button className=\"header-button\" onClick={() => viewSettings()}>\n          Settings\n        </Button>\n      </menu>\n\n      <div className=\"globals\">\n        <div className=\"deaths globals-item\">\n          <div>deaths(+10)</div>\n          <div>{deathCount}</div>\n        </div>\n        <div className=\"starts globals-item\">\n          <div>starts(+1)</div>\n          <div>{newGameCount}</div>\n        </div>\n        <div className=\"resets globals-item\">\n          <div>resets(**2)</div>\n          <div>{hardResetCount}</div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/scissors.3b1a5d7e.svg\";","export default __webpack_public_path__ + \"static/media/rock.476e90a9.svg\";","import Main from './Main';\n\nexport default Main;\n","import React, { useState } from 'react';\nimport { Button, Menu, MenuItem } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport './Main.scss';\nimport paperSvg from '../../assets/paper.svg';\nimport scissorsSvg from '../../assets/scissors.svg';\nimport rockSvg from '../../assets/rock.svg';\n\nconst Main = ({\n  browserChoice,\n  playerChoice,\n  winner,\n  score,\n  round,\n  choices,\n  handleClick,\n  isScoreMode,\n  playerAccumulator,\n  browserAccumulator,\n  drawAccumulator,\n  resetDrawAccumulator,\n  resetPlayerAccumulator,\n  isFirstRound,\n  restoredHealth,\n  absorbedDamage,\n  absorbBrowserScore,\n  changeBackgroundOn,\n  newGame,\n  saveGame,\n  viewHighScore,\n  viewSettings,\n}) => {\n  const [isBurger, setBurger] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const burgerClick = (event) => {\n    setBurger(!isBurger);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const burgerClose = () => {\n    setAnchorEl(null);\n  };\n\n  const getImage = (choice, title, points = 1000) => {\n    return (\n      <div className=\"choice-card\">\n        <div className=\"title-choice\">{title}</div>\n        <div className=\"image-choice-container\">\n          {choice && (\n            <img\n              className=\"image-choice\"\n              src={choice === 'paper' ? paperSvg : playerChoice === 'rock' ? rockSvg : scissorsSvg}\n              alt=\"\"\n            />\n          )}\n          {!isScoreMode || (\n            <div className={title === 'player' ? 'player-points' : 'browser-points'}>{points}</div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <main>\n      <div className=\"game-info\">\n        <div className=\"help\">\n          {choices.map((choice, index) => {\n            return (\n              <div key={index}>\n                Press {index + 1} to choose {choice}\n              </div>\n            );\n          })}\n          <div>Press shift+m to change mode</div>\n          <div>Press shift+h to open/close highscore</div>\n        </div>\n        <div\n          className={`round ${\n            winner === 'player' ? 'win' : winner === 'browser' ? 'lose' : 'draw'\n          }`}\n        >\n          <div className=\"round-item\">\n            <div>Restored</div>\n            <div>{restoredHealth}</div>\n          </div>\n          <div className=\"round-item\">\n            <div>Chances</div>\n            <div>{round}</div>\n          </div>\n          <div className=\"round-item\">\n            <div>Absorbed</div>\n            <div>{absorbedDamage}</div>\n          </div>\n          <div className=\"round-item burger\">\n            <Button\n              className=\"burger-button\"\n              aria-controls=\"simple-menu\"\n              aria-haspopup=\"true\"\n              onClick={burgerClick}\n            >\n              <MenuIcon />\n            </Button>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={burgerClose}\n              color=\"primary\"\n            >\n              <MenuItem onClick={() => changeBackgroundOn()}>Background</MenuItem>\n              <MenuItem\n                onClick={() => {\n                  burgerClose();\n                  newGame();\n                }}\n              >\n                New Game\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  burgerClose();\n                  saveGame();\n                }}\n              >\n                Save Game\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  burgerClose();\n                  viewHighScore();\n                }}\n              >\n                High-score\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  burgerClose();\n                  viewSettings();\n                }}\n              >\n                Settings\n              </MenuItem>\n            </Menu>\n          </div>\n        </div>\n        <div className=\"winner\">\n          {!isFirstRound && (winner ? (winner === 'player' ? 'WIN!!!!' : 'LOSE') : 'DRAW')}\n        </div>\n      </div>\n\n      <div className=\"mode-title\">{isScoreMode ? 'Accumulation' : 'Confrontation'}</div>\n\n      <div className=\"game-view\">\n        {getImage(playerChoice, 'Human', playerAccumulator)}\n\n        <div className=\"score\">\n          <div className=\"score-title\">Health</div>\n          <div className=\"score-value\">{score}</div>\n          {!isScoreMode || (\n            <div className=\"reset-draw-container\">\n              <Button className=\"reset-draw-button\" onClick={() => absorbBrowserScore()}>\n                absorb\n              </Button>\n              <Button className=\"reset-draw-button\" onClick={() => resetPlayerAccumulator()}>\n                Reset acc {playerAccumulator}\n              </Button>\n              <Button className=\"reset-draw-button\" onClick={() => resetDrawAccumulator()}>\n                BONUS {drawAccumulator}\n              </Button>\n            </div>\n          )}\n        </div>\n        {getImage(browserChoice, 'browser', browserAccumulator)}\n      </div>\n\n      <div className=\"choices\">\n        {choices.map((choice, index) => {\n          return (\n            <Button\n              className=\"choice-button\"\n              size={'large'}\n              key={index}\n              onClick={() => handleClick(choice)}\n            >\n              {choice}\n            </Button>\n          );\n        })}\n      </div>\n    </main>\n  );\n};\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import React from 'react';\nimport { Link } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport './Footer.scss';\nimport CourseLogo from '../../assets/rs_school_js.svg';\n\nconst GithubLink = () => {\n  return (\n    <Link className=\"github\" href=\"https://github.com/DmitryBogdan90\" color=\"inherit\">\n      <GitHubIcon fontSize={'large'} />\n    </Link>\n  );\n};\n\nconst Year = () => {\n  return <div className=\"year\">2021</div>;\n};\n\nconst LogoFooter = () => {\n  return (\n    <Link className=\"logo-js\" href=\"https://rs.school/js/\" color=\"inherit\">\n      <img className=\"logo-js-image\" src={CourseLogo} alt=\"\" height={50} />\n    </Link>\n  );\n};\n\nconst Footer = () => {\n  return (\n    <footer>\n      <GithubLink />\n      <Year />\n      <LogoFooter />\n    </footer>\n  );\n};\n\nexport default Footer;\n","import Footer from './Footer';\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nimport './Background.scss';\n\nclass Star {\n  constructor(width, height) {\n    this.x = Math.random() * width;\n    this.y = Math.random() * height;\n\n    this.z = width;\n    this.size = 0.6;\n    this.radius = Math.random() * 1.2;\n    this.speed = 0.2;\n  }\n}\n\nclass Background extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 0,\n      canvas: {\n        width: 1280,\n        height: 720,\n        centerX: 640,\n        centerY: 360,\n      },\n      stars: [],\n    };\n\n    this.tick = this.tick.bind(this);\n    this.animationID = null;\n  }\n\n  componentDidMount() {\n    this.paint();\n    this.setState({ stars: this.generateStars() });\n    this.animationID = window.requestAnimationFrame(this.tick);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {}\n\n  componentWillUnmount() {\n    window.cancelAnimationFrame(this.animationID);\n  }\n\n  generateStars() {\n    let stars = [];\n    for (let i = 0; i < 66; i++) {\n      stars[i] = new Star(this.state.canvas.width, this.state.canvas.height);\n    }\n    return stars;\n  }\n\n  paint() {\n    if (this.props.isBackgroundOn) {\n      const {\n        canvas: { width, height, centerX, centerY },\n        stars,\n      } = this.state;\n      let starsNext = stars;\n      let context = this.refs.canvas.getContext('2d');\n      context.fillStyle = 'black';\n      context.fillRect(0, 0, this.state.canvas.width, this.state.canvas.height);\n\n      for (let i = 0; i < starsNext.length; i++) {\n        starsNext[i].z = starsNext[i].z - starsNext[i].speed;\n        if (starsNext[i].z <= 0) {\n          starsNext[i].z = width;\n        }\n        starsNext[i].x = (starsNext[i].x - centerX) * (width / starsNext[i].z);\n        starsNext[i].x = starsNext[i].x + centerX;\n        starsNext[i].y = (starsNext[i].y - centerY) * (width / starsNext[i].z);\n        starsNext[i].y = starsNext[i].y + centerY;\n        starsNext[i].size = starsNext[i].size * (width / starsNext[i].z);\n        if (\n          starsNext[i].x <= 0 ||\n          starsNext[i].x > width ||\n          starsNext[i].y <= 0 ||\n          starsNext[i].y > height\n        ) {\n          starsNext[i] = new Star(width, height);\n        }\n        context.beginPath();\n        context.arc(starsNext[i].x, starsNext[i].y, starsNext[i].size, 0, 360);\n        context.fillStyle = 'white';\n        context.fill();\n      }\n    } else {\n      window.cancelAnimationFrame(this.animationID);\n    }\n  }\n\n  tick() {\n    this.paint();\n    setTimeout(() => {\n      this.animationID = window.requestAnimationFrame(() => this.tick());\n    }, 10);\n  }\n\n  render() {\n    const {\n      canvas: { width, height },\n    } = this.state;\n    return <canvas className=\"background\" ref=\"canvas\" width={width} height={height} />;\n  }\n}\n\nexport default Background;\n","import Background from './Background';\n\nexport default Background;\n","export default __webpack_public_path__ + \"static/media/modal.28183fa1.ogg\";","export default __webpack_public_path__ + \"static/media/theme.1c62de80.ogg\";","export default __webpack_public_path__ + \"static/media/win.5472aebc.ogg\";","export default __webpack_public_path__ + \"static/media/draw.629a4645.ogg\";","export default __webpack_public_path__ + \"static/media/lose.5a7688cf.ogg\";","import Highscore from './Highscore';\n\nexport default Highscore;\n","import React from 'react';\n\nimport './Highscore.scss';\n\nconst Highscore = ({ highScore }) => {\n  return (\n    <div>\n      <div className=\"highscore-row\">\n        <div className=\"highscore-place highscore-item\">place</div>\n        <div className=\"highscore-score highscore-item\">score</div>\n        <div className=\"highscore-restore highscore-item\">restored</div>\n        <div className=\"highscore-absorb highscore-item\">absorbed</div>\n        <div className=\"highscore-chances highscore-item\">chances</div>\n      </div>\n      {highScore.map(({ score, restoredHealth, round, absorbedDamage }, index) => {\n        return (\n          <div key={index} className=\"highscore-row\">\n            <div className=\"highscore-place highscore-item\">{index + 1}</div>\n            <div className=\"highscore-score highscore-item\">{score}</div>\n            <div className=\"highscore-restore highscore-item\">{restoredHealth}</div>\n            <div className=\"highscore-absorb highscore-item\">{absorbedDamage}</div>\n            <div className=\"highscore-chances highscore-item\">{round}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Highscore;\n","import Settings from './Settings';\n\nexport default Settings;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nconst Settings = ({\n  isMusicOn,\n  playTheme,\n  isLizardMode,\n  isScoreMode,\n  changeLizardMode,\n  changeScoreMode,\n  hardReset,\n}) => (\n  <div className=\"settings-modal\">\n    <div className=\"settings-title\">Settings</div>\n    <Button className=\"settings-button\" onClick={() => playTheme()}>\n      Music: {!isMusicOn ? 'Play' : 'Pause'}\n    </Button>\n    <Button disabled className=\"settings-button\" onClick={() => changeLizardMode()}>\n      Rules: {isLizardMode ? 'Lizard' : 'Standart'}\n    </Button>\n    <Button className=\"settings-button\" onClick={() => changeScoreMode()}>\n      Mode: {isScoreMode ? 'Confrontation' : 'Accumulation'}\n    </Button>\n    <Button className=\"settings-button\" onClick={() => hardReset()}>\n      Hardreset\n    </Button>\n  </div>\n);\n\nexport default Settings;\n","import App from './App';\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Backdrop, Fade, Modal, Paper } from '@material-ui/core';\nimport Mousetrap from 'mousetrap';\n\nimport './App.scss';\nimport Header from '../Header';\nimport Main from '../Main';\nimport Footer from '../Footer';\nimport Background from '../Background';\nimport AudioModal from '../../assets/modal.ogg';\nimport AudioTheme from '../../assets/theme.ogg';\nimport AudioWin from '../../assets/win.ogg';\nimport AudioDraw from '../../assets/draw.ogg';\nimport AudioLose from '../../assets/lose.ogg';\nimport Highscore from '../Highscore';\nimport Settings from '../Settings';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isFirstRound: true,\n      isBackgroundOn: false,\n      isMusicOn: false,\n      isSettingsOn: false,\n      isHighScoreOn: false,\n      isLizardMode: false,\n      isScoreMode: false,\n      isDead: false,\n\n      choices: ['rock', 'scissors', 'paper'],\n      browserChoice: null,\n      playerChoice: null,\n      winner: null,\n\n      score: 5,\n      round: 0,\n      playerAccumulator: 0,\n      browserAccumulator: 10,\n      iterationAccumulator: 0,\n      drawAccumulator: 0,\n      restoredHealth: 0,\n      absorbedDamage: 0,\n      deathCount: 0,\n      killsCount: 0,\n      newGameCount: 0,\n      hardResetCount: 0,\n\n      highScore: [],\n    };\n\n    this.changeBackgroundOn = this.changeBackgroundOn.bind(this);\n    this.closeHighScore = this.closeHighScore.bind(this);\n    this.closeSettings = this.closeSettings.bind(this);\n    this.viewHighScore = this.viewHighScore.bind(this);\n    this.viewSettings = this.viewSettings.bind(this);\n    this.playAudioEffect = this.playAudioEffect.bind(this);\n    this.newGame = this.newGame.bind(this);\n    this.saveGame = this.saveGame.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.playTheme = this.playTheme.bind(this);\n    this.stopTheme = this.stopTheme.bind(this);\n    this.changeLizardMode = this.changeLizardMode.bind(this);\n    this.changeScoreMode = this.changeScoreMode.bind(this);\n    this.resetDrawAccumulator = this.resetDrawAccumulator.bind(this);\n    this.resetPlayerAccumulator = this.resetPlayerAccumulator.bind(this);\n    this.absorbBrowserScore = this.absorbBrowserScore.bind(this);\n    this.hardReset = this.hardReset.bind(this);\n  }\n\n  componentDidMount() {\n    Mousetrap.bind(['1', '2', '3'], (event) => this.handleClick(this.state.choices[event.key - 1]));\n    Mousetrap.bind(['shift+n'], () => this.newGame());\n    Mousetrap.bind(['shift+h'], () => this.viewHighScore());\n    Mousetrap.bind(['shift+s'], () => this.viewSettings());\n    Mousetrap.bind(['shift+m'], () => this.changeScoreMode());\n\n    if (localStorage.getItem('choices-game')) {\n      const save = JSON.parse(localStorage.getItem('choices-game'));\n      const { newGameCount, hardResetCount, deathCount } = save;\n      const hardResetFine = hardResetCount * 20;\n      const deathFine = +deathCount * 10;\n      const startsFine = +newGameCount + 1;\n      const browserHealth = 10 + startsFine + deathFine + hardResetFine;\n      this.setState({ ...save, browserHealth: browserHealth, isMusicOn: false });\n    }\n\n    if (this.state.score <= 0 && this.state.isFirstRound) {\n      console.log('human must die');\n      this.killHuman('human die');\n    } else if (this.state.browserAccumulator <= 0 && this.state.isFirstRound) {\n      console.log('browser cant die');\n      this.killHuman('human die');\n    }\n\n    this.stopTheme();\n\n    this.setState({\n      audioModal: new Audio(AudioModal),\n      audioTheme: new Audio(AudioTheme),\n      browserHealth:\n        10 +\n        +this.state.newGameCount +\n        +this.state.deathCount * 10 +\n        +this.state.hardResetCount * 20,\n    });\n  }\n\n  componentWillUnmount() {\n    Mousetrap.unbind(['1', '2', '3'], (event) =>\n      this.handleClick(this.state.choices[event.key - 1]),\n    );\n    Mousetrap.unbind(['shift+n'], () => this.newGame());\n    Mousetrap.unbind(['shift+h'], () => this.viewHighScore());\n    Mousetrap.unbind(['shift+s'], () => this.viewSettings());\n    Mousetrap.unbind(['shift+m'], () => this.changeScoreMode());\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('choices-game', JSON.stringify(this.state));\n\n    if (this.state.score <= 0 && this.state.isFirstRound) {\n      this.killHuman();\n    }\n  }\n\n  handleClick(choice) {\n    const {\n      score,\n      round,\n      choices,\n      isScoreMode,\n      playerAccumulator,\n      browserAccumulator,\n      iterationAccumulator,\n      drawAccumulator,\n    } = this.state;\n    const browserChoice = choices[Math.floor(Math.random() * 3)];\n    const playerChoice = choice;\n    const winner = getWinner(browserChoice, playerChoice, choices);\n\n    this.playAudioEffect(winner === 'player' ? AudioWin : winner === null ? AudioDraw : AudioLose);\n\n    if (!isScoreMode) {\n      this.setState({\n        isFirstRound: false,\n        browserChoice,\n        playerChoice,\n        winner,\n        score: winner === 'player' ? +score + 1 : winner === null ? score : +score - 1,\n        round: +round + 1,\n        drawAccumulator: winner === null ? drawAccumulator + 1 : drawAccumulator,\n      });\n    } else {\n      this.setState({\n        isFirstRound: false,\n        browserChoice,\n        playerChoice,\n        winner,\n        browserAccumulator: winner === 'browser' ? +browserAccumulator + 1 : browserAccumulator,\n        playerAccumulator: winner === 'player' ? +playerAccumulator + 1 : playerAccumulator,\n        drawAccumulator: winner === null ? +drawAccumulator + 1 : drawAccumulator,\n        iterationAccumulator: +iterationAccumulator + 1,\n        round: +round + 1,\n      });\n    }\n\n    function getWinner(browserChoice, playerChoice, choices) {\n      let winner;\n      const [rock, scissors, paper] = choices;\n      switch (playerChoice) {\n        case rock:\n          browserChoice === scissors\n            ? (winner = 'player')\n            : browserChoice === rock\n            ? (winner = null)\n            : (winner = 'browser');\n          break;\n        case scissors:\n          browserChoice === paper\n            ? (winner = 'player')\n            : browserChoice === scissors\n            ? (winner = null)\n            : (winner = 'browser');\n          break;\n        case paper:\n          browserChoice === rock\n            ? (winner = 'player')\n            : browserChoice === paper\n            ? (winner = null)\n            : (winner = 'browser');\n          break;\n        default:\n          console.log('default');\n      }\n      return winner;\n    }\n  }\n\n  newGame() {\n    const { newGameCount, hardResetCount, deathCount } = this.state;\n    const hardResetFine = (hardResetCount + 1) * 20;\n    const deathFine = +deathCount * 10;\n    const startsFine = +newGameCount + 1;\n    const browserHealth = 10 + startsFine + deathFine + hardResetFine;\n\n    this.setState({\n      newGameCount: +newGameCount + 1,\n      isFirstRound: true,\n      isBackgroundOn: false,\n      isMusicOn: false,\n      isSettingsOn: false,\n      isHighScoreOn: false,\n      isLizardMode: false,\n      isDead: false,\n\n      choices: ['rock', 'scissors', 'paper'],\n      browserChoice: null,\n      playerChoice: null,\n      winner: null,\n      score: 5,\n      round: 0,\n      playerAccumulator: 0,\n      browserAccumulator: browserHealth,\n      iterationAccumulator: 0,\n      drawAccumulator: 0,\n      restoredHealth: 0,\n      absorbedDamage: 0,\n    });\n    this.playAudioEffect(AudioModal);\n  }\n\n  saveGame() {\n    const { score, restoredHealth, round, absorbedDamage, highScore } = this.state;\n    const sortHighScore = highScore.splice(-20);\n\n    this.setState({\n      highScore: [\n        ...sortHighScore,\n        { id: Date.now(), score, restoredHealth, round, absorbedDamage },\n      ].sort((a, b) => (a.score < b.score ? 1 : -1)),\n    });\n    this.playAudioEffect(AudioModal);\n    localStorage.setItem('choices-game', JSON.stringify(this.state));\n  }\n\n  viewHighScore() {\n    if (this.state.isHighScoreOn) {\n      this.setState({ isHighScoreOn: !this.state.isHighScoreOn });\n      return;\n    }\n    if (this.state.isSettingsOn) {\n      this.setState({ isSettingsOn: !this.state.isSettingsOn });\n    }\n    this.playAudioEffect(AudioModal);\n    this.setState({ isHighScoreOn: true });\n  }\n\n  closeHighScore() {\n    this.setState({ isHighScoreOn: false });\n  }\n\n  viewSettings() {\n    if (this.state.isHighScoreOn) {\n      this.setState({ isHighScoreOn: !this.state.isHighScoreOn });\n    }\n    this.playAudioEffect(AudioModal);\n    this.setState({ isSettingsOn: true });\n  }\n\n  closeSettings() {\n    this.setState({ isSettingsOn: false });\n  }\n\n  playAudioEffect(audioSource) {\n    if (this.audioEffect) {\n      this.audioEffect = null;\n    }\n    this.audioEffect = new Audio(audioSource);\n    this.audioEffect.play();\n  }\n\n  playTheme() {\n    if (this.state.isMusicOn) {\n      this.state.audioTheme.pause();\n      this.setState({ isMusicOn: false });\n    } else {\n      this.setState({ isMusicOn: true });\n      this.state.audioTheme.play();\n    }\n  }\n\n  stopTheme() {\n    this.setState({ isThemePlay: false, audioTheme: null });\n  }\n\n  changeBackgroundOn() {\n    this.setState({ isBackgroundOn: !this.state.isBackgroundOn });\n  }\n\n  changeLizardMode() {\n    this.setState({ isLizardMode: !this.state.isLizardMode });\n  }\n\n  changeScoreMode() {\n    this.setState({ isScoreMode: !this.state.isScoreMode });\n  }\n\n  resetDrawAccumulator() {\n    const { score, drawAccumulator, restoredHealth } = this.state;\n    this.setState({\n      score: +score + +drawAccumulator,\n      restoredHealth: +restoredHealth + +drawAccumulator,\n      drawAccumulator: 0,\n    });\n    this.playAudioEffect(AudioModal);\n  }\n\n  resetPlayerAccumulator() {\n    const { score, playerAccumulator, restoredHealth } = this.state;\n    this.setState({\n      score: +score + +playerAccumulator,\n      restoredHealth: +restoredHealth + +playerAccumulator,\n      playerAccumulator: 0,\n    });\n    this.playAudioEffect(AudioModal);\n  }\n\n  absorbBrowserScore() {\n    const { score, browserAccumulator, absorbedDamage } = this.state;\n\n    if (+score - +browserAccumulator > 0) {\n      this.setState({\n        score: +score - +browserAccumulator,\n        browserAccumulator: 0,\n        absorbedDamage: +absorbedDamage + +browserAccumulator,\n      });\n      this.playAudioEffect(AudioModal);\n    } else {\n      this.killHuman();\n    }\n  }\n\n  killHuman() {\n    const { deathCount } = this.state;\n    this.setState({\n      isDead: true,\n      deathCount: +deathCount + 1,\n    });\n  }\n\n  hardReset() {\n    const { hardResetCount, newGameCount } = this.state;\n\n    this.setState({\n      hardResetCount: +hardResetCount + 1,\n      isScoreMode: false,\n      newGameCount: newGameCount > 0 ? newGameCount - 1 : newGameCount,\n    });\n    this.newGame();\n  }\n\n  render() {\n    const {\n      isBackgroundOn,\n      choices,\n      browserChoice,\n      playerChoice,\n      winner,\n      score,\n      round,\n      isHighScoreOn,\n      isSettingsOn,\n      isMusicOn,\n      isLizardMode,\n      isScoreMode,\n      playerAccumulator,\n      browserAccumulator,\n      iterationAccumulator,\n      drawAccumulator,\n      restoredHealth,\n      absorbedDamage,\n      isDead,\n      deathCount,\n      newGameCount,\n      hardResetCount,\n      highScore,\n    } = this.state;\n\n    return (\n      <>\n        <Fade in={isBackgroundOn}>\n          <Paper className=\"background\" elevation={4}>\n            <Background isBackgroundOn={isBackgroundOn} />\n          </Paper>\n        </Fade>\n\n        <Header\n          changeBackgroundOn={this.changeBackgroundOn}\n          newGame={this.newGame}\n          saveGame={this.saveGame}\n          viewHighScore={this.viewHighScore}\n          viewSettings={this.viewSettings}\n          deathCount={deathCount}\n          newGameCount={newGameCount}\n          hardResetCount={hardResetCount}\n          choices={choices}\n          handleClick={this.handleClick}\n        />\n\n        <Main\n          browserChoice={browserChoice}\n          playerChoice={playerChoice}\n          winner={winner}\n          score={score}\n          round={round}\n          choices={choices}\n          handleClick={this.handleClick}\n          isScoreMode={isScoreMode}\n          playerAccumulator={playerAccumulator}\n          browserAccumulator={browserAccumulator}\n          iterationAccumulator={iterationAccumulator}\n          drawAccumulator={drawAccumulator}\n          resetDrawAccumulator={this.resetDrawAccumulator}\n          resetPlayerAccumulator={this.resetPlayerAccumulator}\n          restoredHealth={restoredHealth}\n          absorbedDamage={absorbedDamage}\n          absorbBrowserScore={this.absorbBrowserScore}\n          changeBackgroundOn={this.changeBackgroundOn}\n          newGame={this.newGame}\n          saveGame={this.saveGame}\n          viewHighScore={this.viewHighScore}\n          viewSettings={this.viewSettings}\n        />\n\n        <Fade in={!isBackgroundOn}>\n          <Paper className=\"footer\" elevation={4}>\n            <Footer />\n          </Paper>\n        </Fade>\n\n        <div className=\"score-mode\">\n          <div className=\"big-score-mode-title\">\n            {isScoreMode ? 'Accumulation' : 'Confrontation'}\n          </div>\n        </div>\n\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className=\"modal\"\n          open={isHighScoreOn}\n          onClose={this.closeHighScore}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={isHighScoreOn}>\n            <div className=\"paper high-score-table\">\n              <Highscore highScore={highScore} />\n            </div>\n          </Fade>\n        </Modal>\n\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className=\"modal\"\n          open={isSettingsOn}\n          onClose={this.closeSettings}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={isSettingsOn}>\n            <div className=\"paper\">\n              <Settings\n                isMusicOn={isMusicOn}\n                playTheme={this.playTheme}\n                isLizardMode={isLizardMode}\n                isScoreMode={isScoreMode}\n                changeLizardMode={this.changeLizardMode}\n                changeScoreMode={this.changeScoreMode}\n                hardReset={this.hardReset}\n              />\n            </div>\n          </Fade>\n        </Modal>\n\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className=\"modal\"\n          open={isDead}\n          onClose={this.newGame}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={isDead}>\n            <div className=\"end-game\">YOU DIE</div>\n          </Fade>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './style.scss';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}